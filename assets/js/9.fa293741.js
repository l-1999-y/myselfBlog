(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{282:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),s("p",[t._v("w3c叫做事件循环，浏览器中叫做消息循环")]),t._v(" "),s("h2",{attrs:{id:"浏览器的进程模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的进程模型"}},[t._v("#")]),t._v(" 浏览器的进程模型")]),t._v(" "),s("h3",{attrs:{id:"进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),s("p",[t._v("程序运行需要有他自己专属的内存空间，可以把这个块内存空间简单的理解为进程"),s("br"),t._v("\n每个应用至少有一个进程，进程之间相互独立，即使要通信，也需要双方同意")]),t._v(" "),s("h3",{attrs:{id:"线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[t._v("#")]),t._v(" 线程")]),t._v(" "),s("p",[t._v("有了进程之后，就可以运行程序的代码了，运行代码的「人」称之为「线程」。一个进程至少有一个线程，所以在进程开启之后会自动创建一个线程来运行代码，该线程称之为主线程。\n如果程序需要同事执行多块代码，主线程就会启动更多的线程来执行代码，所以一个进程可以包含多个线程")]),t._v(" "),s("h3",{attrs:{id:"浏览器有哪些进程和线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器有哪些进程和线程"}},[t._v("#")]),t._v(" 浏览器有哪些进程和线程")]),t._v(" "),s("h6",{attrs:{id:"浏览器是一个多进程多线程的应用程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是一个多进程多线程的应用程序"}},[t._v("#")]),t._v(" 浏览器是一个多进程多线程的应用程序")]),t._v(" "),s("p",[t._v("为了避免相互影响，为了减少连环崩溃的几率，当启动浏览器后，刘安琪会自动启动多个进程。")]),t._v(" "),s("blockquote",[s("p",[t._v("可以在浏览器的任务管理器中查看浏览器的当前的所有进程")])]),t._v(" "),s("p",[t._v("其中最主要的进程有：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器进程：\n主要负责界面显示、用户交互、子进程管理等。浏览器进程内部会启动多个线程处理不同的任务。")])]),t._v(" "),s("li",[s("p",[t._v("网络进程\n负责加载网络资源。网络进程内部会启动多个线程来处理不同的网络任务。")])]),t._v(" "),s("li",[s("p",[t._v("渲染进程\n渲染进程启动后，会开启一个渲染主线程，主线程负责执行 HTML、CSS、JS 代码。\n默认情况下，浏览器会为每一个标签页开启一个新的渲染进程，以保证不同的标签页之间不互相影响")]),t._v(" "),s("blockquote",[s("p",[t._v("默认模式可能会有所改变，参见"),s("a",{attrs:{href:"https://chromium.googlesource.com/chromium/src/+/main/docs/process_model_and_site_isolation.md#Modes-and-Availability",target:"_blank",rel:"noopener noreferrer"}},[t._v("chorme官方说明文档"),s("OutboundLink")],1)])])])]),t._v(" "),s("h2",{attrs:{id:"渲染主线程是如何工作的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染主线程是如何工作的"}},[t._v("#")]),t._v(" 渲染主线程是如何工作的")]),t._v(" "),s("p",[t._v("渲染主线程是浏览器中最繁忙的线程，需要它处理的任务包括但不限于：")]),t._v(" "),s("ul",[s("li",[t._v("解析 HTML")]),t._v(" "),s("li",[t._v("解析 CSS")]),t._v(" "),s("li",[t._v("计算样式")]),t._v(" "),s("li",[t._v("布局")]),t._v(" "),s("li",[t._v("处理图层")]),t._v(" "),s("li",[t._v("每秒把页面画60次")]),t._v(" "),s("li",[t._v("执行全局 JS  代码")]),t._v(" "),s("li",[t._v("执行事件处理函数")]),t._v(" "),s("li",[t._v("执行计时器的回调函数")]),t._v(" "),s("li",[t._v("······")])]),t._v(" "),s("p",[t._v("要处理这么多任务，主线程遇到一个前所未有的的难题：如何调度任务？\n比如：")]),t._v(" "),s("ul",[s("li",[t._v("正在执行一个js函数，执行到一半的时候，用户点击的按钮，我应该立即去执行点击事件的处理函数吗?")]),t._v(" "),s("li",[t._v("正在执行一个JS函数，执行到一半的时候，某个计时器到达时间，我应该立即去执行它的回调吗？")]),t._v(" "),s("li",[t._v("浏览器进程通知我‘用户点击了按钮’，与此同时，计时器也到达了时间，我应该处理那个？")]),t._v(" "),s("li",[t._v("······")])]),t._v(" "),s("p",[t._v("渲染主线程想出了一个主意来处理这个问题：排队")]),t._v(" "),s("ol",[s("li",[t._v("在最开始的时候，渲染主线程会进入一个无限循环")]),t._v(" "),s("li",[t._v("每一次循环会检查消息队列中是否有任务存在，如果有的话，就取出第一个任务执行，执行完过后进入下一次循环，如果说没有的话，那如果说没任务怎么办，没有就进入休眠状态。")]),t._v(" "),s("li",[t._v("如果说突然一开始没有任务，后来又突突然出现一个任务，那么就会唤醒其他所有的线程，包括其他进程的线程，可以随时的向消息队列中加任务。如果说主线程是休眠的，那么就会唤醒你继续循环拿任务。新任务会添加到消息队列的末尾\n整个过程被称为事件循环")])]),t._v(" "),s("h2",{attrs:{id:"若干解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#若干解释"}},[t._v("#")]),t._v(" 若干解释")]),t._v(" "),s("h3",{attrs:{id:"异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[t._v("#")]),t._v(" 异步")]),t._v(" "),s("p",[t._v("代码执行过程中，会遇到一些无法立即执行的任务，比如：")]),t._v(" "),s("ul",[s("li",[t._v("seTimeout 、setInterval")]),t._v(" "),s("li",[t._v("网络通信完成后需要执行的任务 ---- Xhr、Fetch")]),t._v(" "),s("li",[t._v("用户操作后需要执行的任务 ----addEventListener\n如果让渲染主线程等待这些任务的时机到达，就会导致主线程长期处于「阻塞」状态，从而导致浏览器「卡死」")])]),t._v(" "),s("p",[t._v("使用异步的方式，渲染主线程不堵塞")]),t._v(" "),s("blockquote",[s("p",[t._v("如何理解js的异步？")]),t._v(" "),s("p",[t._v("参考答案:\nJS是一门单线程的语言，这是因为它运行在浏览器的渲染主线程中，而渲染主线程只有一个。\n而渲染主线程承担着诸多的工作，渲染页面、执行 JS 都在其中运行.\n如果使用同步的方式，就极有可能导致主线程产生阻塞，从而导致消息队列中的很多其他任务无法得到执行。这样一来，一方面会导致繁忙的主线程白白的消耗时间，另一方面导致页面无法及时更新，给用户造成卡死现象。\n所以浏览器采用异步的方式来避免。具体做法是当某些任务发生时，比如计时器、网络、事件监听，主线程将任务交给其他线程去处理，自身立即结束任务的执行，转而执行后续代码。当其他线程完成时，将事先传递的回调函数包装成任务，加入到消息队列的未尾排队，等待主线程调度执行。\n在这种异步模式下，浏览器永不阻塞，从而最大限度的保证了单线程的流畅运行。")])]),t._v(" "),s("h3",{attrs:{id:"js为何会阻塞渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js为何会阻塞渲染"}},[t._v("#")]),t._v(" JS为何会阻塞渲染")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("english"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("change"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 死循环指定时间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("duration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nbtn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    h1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'中文'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 点击之后三秒之后h1标签才会冲english变成中文，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 三秒内不论做什么操作都需要等三面之后排队渲染页面")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[t._v("因为js和渲染他们都在浏览器的渲染主线程上面，渲染的时候js需要等着，执行js的时候渲染需要等")]),t._v(" "),s("h3",{attrs:{id:"任务有优先级吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#任务有优先级吗"}},[t._v("#")]),t._v(" 任务有优先级吗？")]),t._v(" "),s("p",[t._v("任务没有优先级，在消息队列中先进先出，后进后出")]),t._v(" "),s("p",[t._v("但是"),s("b",[t._v("消息队列是有优先级")])]),t._v(" "),s("p",[t._v("根据W3C的最新解释：")]),t._v(" "),s("ul",[s("li",[t._v("每一个任务他都有一个任务类型，同一个类型的任务必须在一个队列，不同类型的任务可以分属于不同的队列。在一次事件循环中，浏览器可以根据实际情况从不同的队列里边取任务执行。")]),t._v(" "),s("li",[t._v("浏览器必须准备好一个微队列。微队列中的任务优先于其他任务执行"),s("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/webappapis.html#perform-a-microtask-checkpoint",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://html.spec.whatwg.org/multipage/webappapis.html#perform-a-microtask-checkpoint"),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("随着浏览器的复杂度急剧提升，W3C不再使用宏队列的说法")])]),t._v(" "),s("p",[t._v("目前Chrome的实现中，至少包含了下面的队列：")]),t._v(" "),s("ul",[s("li",[t._v("延时队列：用于存放计时器到达后的回调任务，优先级「中」")]),t._v(" "),s("li",[t._v("交互队列：用于存放用户操作之后产生的事件处理任务，优先级「高」")]),t._v(" "),s("li",[t._v("微队列：用户存放需要最快执行的任务，优先级「最高」")])]),t._v(" "),s("blockquote",[s("p",[t._v("添加任务到微队列的主要方式是使用 Promise MutationObserver")])]),t._v(" "),s("blockquote",[s("p",[t._v("Promise: Promise是一种异步编程的解决方案，用于解决回调函数嵌套过多、代码难以维护的问题。Promise可以将异步操作封装成一个对象，使得异步操作更加直观、易于理解和维护。Promise对象有三种状态：pending、fulfilled和rejected。当异步操作执行完成时，Promise对象的状态会从pending变为fulfilled或rejected，并且会执行相应的回调函数。Promise对象可以通过then方法注册fulfilled状态的回调函数，通过catch方法注册rejected状态的回调函数。同时，Promise还提供了一些静态方法，例如Promise.all、Promise.race等，用于处理多个Promise对象的情况。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//立即吧一个函数添加到微队列中")]),t._v("\nPromise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("blockquote",[s("p",[t._v("MutationObserver: MutationObserver是一个Web API，用于在DOM树发生变化时异步地观察并响应这些变化。MutationObserver可以监听DOM树中的节点插入、删除、属性变化等事件，并在这些事件发生时执行回调函数。MutationObserver可以用于实现许多功能，例如自动保存表单数据、实现无限滚动、实现自定义数据绑定等。")])]),t._v(" "),s("blockquote",[s("p",[t._v("面试题：阐述一下JS 的事件循环\n参考答案：\n事件循环又叫做消息循环，是浏览器渲染主线程的工作方式。\n在 Chrome 的源码中，它开启一个不会结束的 for 循环，每次循环从消息队列中取出第一个任务执行，而其他线程只需要在合适的时候将任务加入到队列未尾即可。过去把消息队列简单分为宏队列和微队列，这种说法目前已无法满足复杂的浏览器环境，取而代之的是一种更加灵活多变的处理方式。\n根据 W3C 官方的解释，每个任务有不同的类型，同类型的任务必须在同一个队列，不同的任务可以属于不同的队列。不同任务队列有不同的优先级，在一次事件循环中，由浏览器自行决定取哪一个队列的任务。但浏览器必须有一个微队列，微队列的任务一定具有最高的优先级，必须优先调度执行。")])]),t._v(" "),s("blockquote",[s("p",[t._v("面试题： JS可以实现精准计时吗？为什么\n不可以，因为：")]),t._v(" "),s("ol",[s("li",[t._v("计算机硬件没有原子钟，无法做到精确计时")]),t._v(" "),s("li",[t._v("操作系统的计时函数本身就有少量偏差，由于 JS 的计时器最终调用的是操作系统的函数，也就携带了这些偏差")]),t._v(" "),s("li",[t._v("按照 W3C 的标准，浏览器实现计时器时，如果嵌套层级超过 5 层，则会带有 4 毫秒的最少时间，这样在计时时间少于 4 毫秒时又带来了偏差")]),t._v(" "),s("li",[t._v("受事件循环的影响，计时器的回调函数只能在主线程空闲时运行，因此又带来了偏差")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);